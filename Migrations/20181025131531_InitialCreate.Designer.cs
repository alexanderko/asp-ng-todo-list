// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoSpa.Models;

namespace TodoSpa.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20181025131531_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("TodoSpa.Models.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDone");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("TodoListId");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new { Id = 1L, IsDone = true, Title = "Register on Meetup", TodoListId = 1 },
                        new { Id = 2L, IsDone = false, Title = "Get amazed by ASP.NET Core", TodoListId = 1 },
                        new { Id = 3L, IsDone = false, Title = "Apply to InterLink inCamp", TodoListId = 1 }
                    );
                });

            modelBuilder.Entity("TodoSpa.Models.TodoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("TodoLists");

                    b.HasData(
                        new { Id = 1, Title = "Get Junior Developer Position" }
                    );
                });

            modelBuilder.Entity("TodoSpa.Models.Task", b =>
                {
                    b.HasOne("TodoSpa.Models.TodoList")
                        .WithMany("Tasks")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
